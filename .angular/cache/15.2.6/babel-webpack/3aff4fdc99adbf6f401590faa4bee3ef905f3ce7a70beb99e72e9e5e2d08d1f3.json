{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SearchFilterPipe {\n  transform(list, ...args) {\n    let tempArr = [];\n    if (args[0] !== '') {\n      tempArr = list.map(l => {\n        let cards = [];\n        l.cards.map(c => {\n          if (c.header.indexOf(args[0]) !== -1 || c.summary.indexOf(args[0]) !== -1) {\n            cards.push(c);\n          }\n          return c;\n        });\n        tempArr.push({\n          ...l,\n          cards: cards\n        });\n        return l;\n      });\n      return tempArr;\n    } else {\n      return list;\n    }\n  }\n}\nSearchFilterPipe.ɵfac = function SearchFilterPipe_Factory(t) {\n  return new (t || SearchFilterPipe)();\n};\nSearchFilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"searchFilter\",\n  type: SearchFilterPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,gBAAgB;EAE3BC,SAASA,CAACC,IAAS,EAAE,GAAGC,IAAW;IACjC,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAGD,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,EAAC;MACfC,OAAO,GAAGF,IAAI,CAACG,GAAG,CAACC,CAAC,IAAE;QACpB,IAAIC,KAAK,GAAG,EAAE;QACdD,CAAC,CAACC,KAAK,CAACF,GAAG,CAACG,CAAC,IAAE;UACZ,IAAGA,CAAC,CAACC,MAAM,CAACC,OAAO,CAACP,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAGK,CAAC,CAACG,OAAO,CAACD,OAAO,CAACP,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC;YACtEI,KAAK,CAACK,IAAI,CAACJ,CAAC,CAAC;;UAEf,OAAOA,CAAC;QACX,CAAC,CAAC;QACFJ,OAAO,CAACQ,IAAI,CAAC;UACX,GAAGN,CAAC;UACJC,KAAK,EAAEA;SACR,CAAC;QACF,OAAOD,CAAC;MACV,CAAC,CAAC;MAEF,OAAOF,OAAO;KAChB,MACI;MACH,OAAOF,IAAI;;EAEf;;AAzBWF,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;;QAAhBA,gBAAgB;EAAAa,IAAA;AAAA","names":["SearchFilterPipe","transform","list","args","tempArr","map","l","cards","c","header","indexOf","summary","push","pure"],"sourceRoot":"","sources":["/Users/mac/Desktop/kanban-angular/src/app/search-filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchFilter'\n})\nexport class SearchFilterPipe implements PipeTransform {\n\n  transform(list: any, ...args: any[]) {\n    let tempArr = []\n    if(args[0] !== ''){\n       tempArr = list.map(l=>{\n         let cards = [];\n         l.cards.map(c=> {\n            if(c.header.indexOf(args[0]) !== -1|| c.summary.indexOf(args[0]) !== -1){\n              cards.push(c);\n            }\n            return c\n         })\n         tempArr.push({\n           ...l,\n           cards: cards\n         })\n         return l\n       })\n\n       return tempArr\n    }\n    else {\n      return list\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}