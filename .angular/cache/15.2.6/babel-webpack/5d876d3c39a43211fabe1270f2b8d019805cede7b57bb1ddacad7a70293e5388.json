{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Card } from '../../../model/card/card.model';\nimport { Movement } from 'src/app/model/card/movement';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../card/summary/summary.component\";\nimport * as i3 from \"../../../directives/common/content-edit.directive\";\nimport * as i4 from \"../../common/contextmenu/context-menu.component\";\nfunction ListComponent_app_card_summary_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-card-summary\", 6);\n  }\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"card\", card_r1)(\"listIndex\", ctx_r0.listIndex)(\"cardIndex\", i_r2);\n    i0.ɵɵattribute(\"cardIndex\", i_r2);\n  }\n}\nexport class ListComponent {\n  constructor(elementRef, document) {\n    this.elementRef = elementRef;\n    this.document = document;\n    this.moveCardAcrossList = new EventEmitter();\n    this.newCardAdded = new EventEmitter();\n    this.deleteList = new EventEmitter();\n    this.cardCount = 0;\n  }\n  ngOnInit() {}\n  addNewCard() {\n    const card = new Card(this.cardCount++ + '', 'header' + this.cardCount, 'summary' + this.cardCount, 'sample desc');\n    this.list.cards.push(card);\n    this.newCardAdded.emit(card);\n  }\n  allowCardReplacement(dragEvent) {\n    dragEvent.dataTransfer.dropEffect = 'move';\n    dragEvent.preventDefault();\n  }\n  delete() {\n    this.deleteList.emit(this.listIndex);\n  }\n  dropCard(dragEvent) {\n    const data = JSON.parse(dragEvent.dataTransfer.getData('text'));\n    const elements = this.document.elementsFromPoint(dragEvent.x, dragEvent.y);\n    const cardElementBeingDroppedOn = elements.find(x => x.tagName.toLowerCase() === 'app-card-summary');\n    const listElementBeingDroppedOn = elements.find(x => x.tagName.toLowerCase() === 'app-list');\n    const listIndexDroppedOn = parseInt(listElementBeingDroppedOn.getAttribute('listIndex'), 10);\n    const cardIndexDroppedOn = cardElementBeingDroppedOn === undefined ? undefined : parseInt(cardElementBeingDroppedOn.getAttribute('cardIndex'), 10);\n    const listIndexDragged = parseInt(data.listIndex, 10);\n    const cardIndexDragged = parseInt(data.cardIndex, 10);\n    if (listIndexDragged === listIndexDroppedOn) {\n      // same list just re-organize the cards\n      const cardDragged = this.list.cards.splice(cardIndexDragged, 1);\n      this.list.cards.splice(cardIndexDroppedOn, 0, ...cardDragged);\n    } else {\n      this.moveCardAcrossList.emit(new Movement(listIndexDragged, listIndexDroppedOn, cardIndexDragged, cardIndexDroppedOn));\n    }\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  inputs: {\n    list: \"list\",\n    listIndex: \"listIndex\"\n  },\n  outputs: {\n    moveCardAcrossList: \"moveCardAcrossList\",\n    newCardAdded: \"newCardAdded\",\n    deleteList: \"deleteList\"\n  },\n  decls: 8,\n  vars: 4,\n  consts: [[1, \"bg-gray-50\", \"m-0\", \"p-3\", \"border\", \"border-top-3\", \"border-blue-500\", \"border-round-md\", \"w-15rem\", 3, \"id\", \"dragover\", \"drop\"], [3, \"contextAction\"], [1, \"text-center\", \"text-blue-600\", \"font-semibold\", \"line-heading\", 3, \"appContentEdit\", \"appContentEditChange\"], [\"id\", \"list-one\"], [3, \"card\", \"listIndex\", \"cardIndex\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-center\", \"text-gray-400\", \"cursor-pointer\", \"opacity-40\", \"text-base\", 3, \"click\"], [3, \"card\", \"listIndex\", \"cardIndex\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"dragover\", function ListComponent_Template_div_dragover_0_listener($event) {\n        return ctx.allowCardReplacement($event);\n      })(\"drop\", function ListComponent_Template_div_drop_0_listener($event) {\n        return ctx.dropCard($event);\n      });\n      i0.ɵɵelementStart(1, \"app-context-menu\", 1);\n      i0.ɵɵlistener(\"contextAction\", function ListComponent_Template_app_context_menu_contextAction_1_listener() {\n        return ctx.delete();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\", 2);\n      i0.ɵɵlistener(\"appContentEditChange\", function ListComponent_Template_p_appContentEditChange_2_listener($event) {\n        return ctx.list.name = $event;\n      });\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ListComponent_app_card_summary_5_Template, 1, 4, \"app-card-summary\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\", 5);\n      i0.ɵɵlistener(\"click\", function ListComponent_Template_p_click_6_listener() {\n        return ctx.addNewCard();\n      });\n      i0.ɵɵtext(7, \"Add new card...\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵpropertyInterpolate1(\"id\", \"list-\", ctx.listIndex, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"appContentEdit\", ctx.list.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"(\", ctx.list.cards.length, \")\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.list.cards);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.SummaryComponent, i3.ContentEditDirective, i4.ContextMenuComponent],\n  styles: [\".col[_ngcontent-%COMP%] {\\n  background-color: #F5F5F5;\\n  margin: 0px;\\n  padding: 5px;\\n  \\n  border-top: solid 5px blue;\\n  max-width: 270px;\\n\\n}\\n\\n.text-center.add-new-card[_ngcontent-%COMP%]:hover {\\n  opacity:0.9;\\n  color:#767676;\\n\\n}\\n\\n.text-center.add-new-card[_ngcontent-%COMP%] {\\n  font-size:14px;\\n  color:#A6A6A6;\\n  cursor:pointer;\\n  opacity:0.4;\\n  min-width: 230px;\\n}\\n\\n.list-name[_ngcontent-%COMP%]{\\n  font-weight: bold;\\n  text-align: center;\\n}\\n\\n.list[_ngcontent-%COMP%]{\\n  background-color: #e7e9ea;\\n}\\n\\n.no-wrap[_ngcontent-%COMP%] {\\n  word-wrap: break-word;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ib2FyZC9saXN0L2xpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUF5QjtFQUN6QixXQUFXO0VBQ1gsWUFBWTtFQUNaO3lCQUN1QjtFQUN2QiwwQkFBMEI7RUFDMUIsZ0JBQWdCOztBQUVsQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhOztBQUVmOztBQUVBO0VBQ0UsY0FBYztFQUNkLGFBQWE7RUFDYixjQUFjO0VBQ2QsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29sIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0Y1RjVGNTtcbiAgbWFyZ2luOiAwcHg7XG4gIHBhZGRpbmc6IDVweDtcbiAgLyogcGFkZGluZy10b3A6IDEwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxMHB4OyAqL1xuICBib3JkZXItdG9wOiBzb2xpZCA1cHggYmx1ZTtcbiAgbWF4LXdpZHRoOiAyNzBweDtcblxufVxuXG4udGV4dC1jZW50ZXIuYWRkLW5ldy1jYXJkOmhvdmVyIHtcbiAgb3BhY2l0eTowLjk7XG4gIGNvbG9yOiM3Njc2NzY7XG5cbn1cblxuLnRleHQtY2VudGVyLmFkZC1uZXctY2FyZCB7XG4gIGZvbnQtc2l6ZToxNHB4O1xuICBjb2xvcjojQTZBNkE2O1xuICBjdXJzb3I6cG9pbnRlcjtcbiAgb3BhY2l0eTowLjQ7XG4gIG1pbi13aWR0aDogMjMwcHg7XG59XG5cbi5saXN0LW5hbWV7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5saXN0e1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWVhO1xufVxuXG4ubm8td3JhcCB7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAuDA,YAAY,QAAgB,eAAe;AAClG,SAASC,QAAQ,QAAQ,iBAAiB;AAE1C,SAASC,IAAI,QAAuB,gCAAgC;AACpE,SAAuBC,QAAQ,QAAQ,6BAA6B;;;;;;;;ICGhEC,EAAA,CAAAC,SAAA,0BAC4D;;;;;;IADSD,EAAA,CAAAE,UAAA,SAAAC,OAAA,CAAa,cAAAC,MAAA,CAAAC,SAAA,eAAAC,IAAA;IAChEN,EAAA,CAAAO,WAAA,cAAAD,IAAA,CAAsB;;;ADQ5C,OAAM,MAAOE,aAAa;EAUxBC,YAAoBC,UAAsB,EAA4BC,QAAkB;IAApE,KAAAD,UAAU,GAAVA,UAAU;IAAwC,KAAAC,QAAQ,GAARA,QAAQ;IANpE,KAAAC,kBAAkB,GAA+B,IAAIhB,YAAY,EAAgB;IACjF,KAAAiB,YAAY,GAAuB,IAAIjB,YAAY,EAAiB;IACpE,KAAAkB,UAAU,GAAyB,IAAIlB,YAAY,EAAU;IAE/D,KAAAmB,SAAS,GAAG,CAAC;EAEuE;EAE5FC,QAAQA,CAAA,GAER;EAEAC,UAAUA,CAAA;IACR,MAAMC,IAAI,GAAG,IAAIpB,IAAI,CAAC,IAAI,CAACiB,SAAS,EAAE,GAAG,EAAE,EAAE,QAAQ,GAAG,IAAI,CAACA,SAAS,EAAE,SAAS,GAAG,IAAI,CAACA,SAAS,EAAE,aAAa,CAAC;IAClH,IAAI,CAACI,IAAI,CAACC,KAAK,CAACC,IAAI,CAACH,IAAI,CAAC;IAC1B,IAAI,CAACL,YAAY,CAACS,IAAI,CAACJ,IAAI,CAAC;EAC9B;EAGAK,oBAAoBA,CAACC,SAAoB;IACvCA,SAAS,CAACC,YAAY,CAACC,UAAU,GAAG,MAAM;IAC1CF,SAAS,CAACG,cAAc,EAAE;EAC5B;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACd,UAAU,CAACQ,IAAI,CAAC,IAAI,CAACjB,SAAS,CAAC;EACtC;EAGAwB,QAAQA,CAACL,SAAoB;IAC3B,MAAMM,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACR,SAAS,CAACC,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,CAAC;IAC/D,MAAMC,QAAQ,GAAc,IAAI,CAACvB,QAAQ,CAACwB,iBAAiB,CAACX,SAAS,CAACY,CAAC,EAAEZ,SAAS,CAACa,CAAC,CAAC;IACrF,MAAMC,yBAAyB,GAAGJ,QAAQ,CAACK,IAAI,CAACH,CAAC,IAAIA,CAAC,CAACI,OAAO,CAACC,WAAW,EAAE,KAAK,kBAAkB,CAAC;IACpG,MAAMC,yBAAyB,GAAGR,QAAQ,CAACK,IAAI,CAACH,CAAC,IAAIA,CAAC,CAACI,OAAO,CAACC,WAAW,EAAE,KAAK,UAAU,CAAC;IAC5F,MAAME,kBAAkB,GAAGC,QAAQ,CAACF,yBAAyB,CAACG,YAAY,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC;IAC5F,MAAMC,kBAAkB,GAAGR,yBAAyB,KAAKS,SAAS,GAAGA,SAAS,GAC5EH,QAAQ,CAACN,yBAAyB,CAACO,YAAY,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC;IACnE,MAAMG,gBAAgB,GAAGJ,QAAQ,CAACd,IAAI,CAACzB,SAAS,EAAE,EAAE,CAAC;IACrD,MAAM4C,gBAAgB,GAAGL,QAAQ,CAACd,IAAI,CAACoB,SAAS,EAAE,EAAE,CAAC;IAErD,IAAIF,gBAAgB,KAAKL,kBAAkB,EAAE;MAC3C;MACA,MAAMQ,WAAW,GAAG,IAAI,CAAChC,IAAI,CAACC,KAAK,CAACgC,MAAM,CAACH,gBAAgB,EAAE,CAAC,CAAC;MAC/D,IAAI,CAAC9B,IAAI,CAACC,KAAK,CAACgC,MAAM,CAACN,kBAAkB,EAAE,CAAC,EAAE,GAAGK,WAAW,CAAC;KAC9D,MAAM;MACL,IAAI,CAACvC,kBAAkB,CAACU,IAAI,CAAC,IAAIvB,QAAQ,CAACiD,gBAAgB,EAAEL,kBAAkB,EAAEM,gBAAgB,EAAEH,kBAAkB,CAAC,CAAC;;EAG1H;;AApDWtC,aAAa;mBAAbA,aAAa,EAAAR,EAAA,CAAAqD,iBAAA,CAAArD,EAAA,CAAAsD,UAAA,GAAAtD,EAAA,CAAAqD,iBAAA,CAU4BxD,QAAQ;AAAA;AAVjDW,aAAa;QAAbA,aAAa;EAAA+C,SAAA;EAAAC,MAAA;IAAArC,IAAA;IAAAd,SAAA;EAAA;EAAAoD,OAAA;IAAA7C,kBAAA;IAAAC,YAAA;IAAAC,UAAA;EAAA;EAAA4C,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MChB1B/D,EAAA,CAAAiE,cAAA,aAC8F;MAA5FjE,EAAA,CAAAkE,UAAA,sBAAAC,+CAAAC,MAAA;QAAA,OAAYJ,GAAA,CAAAzC,oBAAA,CAAA6C,MAAA,CAA4B;MAAA,EAAC,kBAAAC,2CAAAD,MAAA;QAAA,OAASJ,GAAA,CAAAnC,QAAA,CAAAuC,MAAA,CAAgB;MAAA,EAAzB;MACzCpE,EAAA,CAAAiE,cAAA,0BAA6C;MAA3BjE,EAAA,CAAAkE,UAAA,2BAAAI,iEAAA;QAAA,OAAiBN,GAAA,CAAApC,MAAA,EAAQ;MAAA,EAAC;MAAC5B,EAAA,CAAAuE,YAAA,EAAmB;MAChEvE,EAAA,CAAAiE,cAAA,WAA+F;MAA/BjE,EAAA,CAAAkE,UAAA,kCAAAM,yDAAAJ,MAAA;QAAA,OAAAJ,GAAA,CAAA7C,IAAA,CAAAsD,IAAA,GAAAL,MAAA;MAAA,EAA8B;MAACpE,EAAA,CAAA0E,MAAA,GAAuB;MAAA1E,EAAA,CAAAuE,YAAA,EAAI;MAG1HvE,EAAA,CAAAiE,cAAA,aAAmB;MACjBjE,EAAA,CAAA2E,UAAA,IAAAC,yCAAA,8BAC4D;MAC9D5E,EAAA,CAAAuE,YAAA,EAAM;MAENvE,EAAA,CAAAiE,cAAA,WAAgG;MAAvBjE,EAAA,CAAAkE,UAAA,mBAAAW,0CAAA;QAAA,OAASb,GAAA,CAAA/C,UAAA,EAAY;MAAA,EAAC;MAACjB,EAAA,CAAA0E,MAAA,sBAAe;MAAA1E,EAAA,CAAAuE,YAAA,EAAI;;;MAV/CvE,EAAA,CAAA8E,sBAAA,gBAAAd,GAAA,CAAA3D,SAAA,KAAuB;MAE3BL,EAAA,CAAA+E,SAAA,GAA8B;MAA9B/E,EAAA,CAAAE,UAAA,mBAAA8D,GAAA,CAAA7C,IAAA,CAAAsD,IAAA,CAA8B;MAACzE,EAAA,CAAA+E,SAAA,GAAuB;MAAvB/E,EAAA,CAAAgF,kBAAA,MAAAhB,GAAA,CAAA7C,IAAA,CAAAC,KAAA,CAAA6D,MAAA,MAAuB;MAIjFjF,EAAA,CAAA+E,SAAA,GAAmB;MAAnB/E,EAAA,CAAAE,UAAA,YAAA8D,GAAA,CAAA7C,IAAA,CAAAC,KAAA,CAAmB","names":["EventEmitter","DOCUMENT","Card","Movement","i0","ɵɵelement","ɵɵproperty","card_r1","ctx_r0","listIndex","i_r2","ɵɵattribute","ListComponent","constructor","elementRef","document","moveCardAcrossList","newCardAdded","deleteList","cardCount","ngOnInit","addNewCard","card","list","cards","push","emit","allowCardReplacement","dragEvent","dataTransfer","dropEffect","preventDefault","delete","dropCard","data","JSON","parse","getData","elements","elementsFromPoint","x","y","cardElementBeingDroppedOn","find","tagName","toLowerCase","listElementBeingDroppedOn","listIndexDroppedOn","parseInt","getAttribute","cardIndexDroppedOn","undefined","listIndexDragged","cardIndexDragged","cardIndex","cardDragged","splice","ɵɵdirectiveInject","ElementRef","selectors","inputs","outputs","decls","vars","consts","template","ListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ListComponent_Template_div_dragover_0_listener","$event","ListComponent_Template_div_drop_0_listener","ListComponent_Template_app_context_menu_contextAction_1_listener","ɵɵelementEnd","ListComponent_Template_p_appContentEditChange_2_listener","name","ɵɵtext","ɵɵtemplate","ListComponent_app_card_summary_5_Template","ListComponent_Template_p_click_6_listener","ɵɵpropertyInterpolate1","ɵɵadvance","ɵɵtextInterpolate1","length"],"sourceRoot":"","sources":["/Users/mac/Desktop/kanban-angular/src/app/components/board/list/list.component.ts","/Users/mac/Desktop/kanban-angular/src/app/components/board/list/list.component.html"],"sourcesContent":["import { Component, ElementRef, Input, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ListInterface, List } from '../../../model/list/list.model';\nimport { Card, CardInterface } from '../../../model/card/card.model';\nimport { MovementIntf, Movement } from 'src/app/model/card/movement';\n\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\n\n\n\n\nexport class ListComponent implements OnInit {\n\n  @Input() list: ListInterface;\n  @Input() listIndex: number;\n  @Output() moveCardAcrossList: EventEmitter<MovementIntf> = new EventEmitter<MovementIntf>();\n  @Output() newCardAdded: EventEmitter<Card> = new EventEmitter<CardInterface>();\n  @Output() deleteList: EventEmitter<number> = new EventEmitter<number>();\n\n  private cardCount = 0;\n\n  constructor(private elementRef: ElementRef, @Inject(DOCUMENT) private document: Document) { }\n\n  ngOnInit() {\n\n  }\n\n  addNewCard() {\n    const card = new Card(this.cardCount++ + '', 'header' + this.cardCount, 'summary' + this.cardCount, 'sample desc');\n    this.list.cards.push(card);\n    this.newCardAdded.emit(card);\n  }\n\n\n  allowCardReplacement(dragEvent: DragEvent) {\n    dragEvent.dataTransfer.dropEffect = 'move';\n    dragEvent.preventDefault();\n  }\n\n  delete() {\n    this.deleteList.emit(this.listIndex);\n  }\n\n\n  dropCard(dragEvent: DragEvent) {\n    const data = JSON.parse(dragEvent.dataTransfer.getData('text'));\n    const elements: Element[] = this.document.elementsFromPoint(dragEvent.x, dragEvent.y);\n    const cardElementBeingDroppedOn = elements.find(x => x.tagName.toLowerCase() === 'app-card-summary');\n    const listElementBeingDroppedOn = elements.find(x => x.tagName.toLowerCase() === 'app-list');\n    const listIndexDroppedOn = parseInt(listElementBeingDroppedOn.getAttribute('listIndex'), 10);\n    const cardIndexDroppedOn = cardElementBeingDroppedOn === undefined ? undefined :\n      parseInt(cardElementBeingDroppedOn.getAttribute('cardIndex'), 10);\n    const listIndexDragged = parseInt(data.listIndex, 10);\n    const cardIndexDragged = parseInt(data.cardIndex, 10);\n\n    if (listIndexDragged === listIndexDroppedOn) {\n      // same list just re-organize the cards\n      const cardDragged = this.list.cards.splice(cardIndexDragged, 1);\n      this.list.cards.splice(cardIndexDroppedOn, 0, ...cardDragged);\n    } else {\n      this.moveCardAcrossList.emit(new Movement(listIndexDragged, listIndexDroppedOn, cardIndexDragged, cardIndexDroppedOn));\n    }\n\n  }\n\n\n\n}\n","<div class=\"bg-gray-50 m-0 p-3 border border-top-3 border-blue-500 border-round-md w-15rem\"\n  (dragover)=\"allowCardReplacement($event)\" (drop)=\"dropCard($event)\" id=\"list-{{listIndex}}\">\n  <app-context-menu (contextAction)=\"delete()\"></app-context-menu>\n  <p class=\"text-center text-blue-600 font-semibold line-heading\" [(appContentEdit)]=\"list.name\">({{list.cards.length}})</p>\n\n  <!-- List Card Starts -->\n  <div id=\"list-one\">\n    <app-card-summary *ngFor=\"let card of this.list.cards;let i = index\" [card]=\"card\" [listIndex]=\"listIndex\"\n      [cardIndex]=\"i\" attr.cardIndex=\"{{i}}\"></app-card-summary>\n  </div>\n  <!-- List Card Ends -->\n  <p class=\"text-center text-gray-400 cursor-pointer opacity-40 text-base\" (click)=\"addNewCard()\">Add new card...</p>\n\n\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}