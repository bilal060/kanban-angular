{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class ContentEditDirective {\n  constructor(el, renderer2) {\n    this.el = el;\n    this.renderer2 = renderer2;\n    this.appContentEditChange = new EventEmitter();\n    this.ignoreChange = false;\n  }\n  ngOnInit() {\n    this.makeContentEditable();\n  }\n  // if you press enter then move out of editable mode\n  exitContentEditable($event) {\n    this.el.nativeElement.blur();\n    return false;\n  }\n  exitContentEditableWithoutChanges($event) {\n    this.ignoreChange = true;\n    this.el.nativeElement.blur();\n    return false;\n  }\n  propagateChange() {\n    if (!this.ignoreChange) {\n      this.appContentEditChange.emit(this.el.nativeElement.innerText);\n    } else {\n      this.el.nativeElement.innerText = this.appContentEdit;\n    }\n    this.ignoreChange = false;\n    this.exitChange();\n  }\n  exitChange() {\n    this.renderer2.setAttribute(this.el.nativeElement, 'contenteditable', 'false');\n    this.renderer2.removeClass(this.el.nativeElement, 'inline-edit');\n  }\n  makeContentEditable() {\n    this.renderer2.appendChild(this.el.nativeElement, this.renderer2.createText(this.appContentEdit));\n    this.renderer2.listen(this.el.nativeElement, 'dblclick', () => {\n      this.renderer2.setAttribute(this.el.nativeElement, 'contenteditable', 'true');\n      this.renderer2.addClass(this.el.nativeElement, 'inline-edit');\n      this.el.nativeElement.focus();\n    });\n  }\n}\nContentEditDirective.ɵfac = function ContentEditDirective_Factory(t) {\n  return new (t || ContentEditDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nContentEditDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: ContentEditDirective,\n  selectors: [[\"\", \"appContentEdit\", \"\"]],\n  hostBindings: function ContentEditDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.enter\", function ContentEditDirective_keydown_enter_HostBindingHandler() {\n        return ctx.exitContentEditable();\n      })(\"keydown.escape\", function ContentEditDirective_keydown_escape_HostBindingHandler() {\n        return ctx.exitContentEditableWithoutChanges();\n      })(\"blur\", function ContentEditDirective_blur_HostBindingHandler() {\n        return ctx.propagateChange();\n      });\n    }\n  },\n  inputs: {\n    appContentEdit: \"appContentEdit\"\n  },\n  outputs: {\n    appContentEditChange: \"appContentEditChange\"\n  }\n});","map":{"version":3,"mappings":"AAAA,SAAqDA,YAAY,QAAmC,eAAe;;AAKnH,OAAM,MAAOC,oBAAoB;EAS/BC,YAAoBC,EAAc,EAAUC,SAAoB;IAA5C,KAAAD,EAAE,GAAFA,EAAE;IAAsB,KAAAC,SAAS,GAATA,SAAS;IAJ3C,KAAAC,oBAAoB,GAAyB,IAAIL,YAAY,EAAU;IAEzE,KAAAM,YAAY,GAAG,KAAK;EAG5B;EAGAC,QAAQA,CAAA;IACN,IAAI,CAACC,mBAAmB,EAAE;EAC5B;EAEA;EAGAC,mBAAmBA,CAACC,MAAM;IACxB,IAAI,CAACP,EAAE,CAACQ,aAAa,CAACC,IAAI,EAAE;IAC5B,OAAO,KAAK;EACd;EAGAC,iCAAiCA,CAACH,MAAM;IACtC,IAAI,CAACJ,YAAY,GAAG,IAAI;IACxB,IAAI,CAACH,EAAE,CAACQ,aAAa,CAACC,IAAI,EAAE;IAC5B,OAAO,KAAK;EACd;EAIAE,eAAeA,CAAA;IACb,IAAI,CAAC,IAAI,CAACR,YAAY,EAAE;MACtB,IAAI,CAACD,oBAAoB,CAACU,IAAI,CAAC,IAAI,CAACZ,EAAE,CAACQ,aAAa,CAACK,SAAS,CAAC;KAChE,MAAM;MACL,IAAI,CAACb,EAAE,CAACQ,aAAa,CAACK,SAAS,GAAG,IAAI,CAACC,cAAc;;IAEvD,IAAI,CAACX,YAAY,GAAG,KAAK;IACzB,IAAI,CAACY,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACd,SAAS,CAACe,YAAY,CAAC,IAAI,CAAChB,EAAE,CAACQ,aAAa,EAAE,iBAAiB,EAAE,OAAO,CAAC;IAC9E,IAAI,CAACP,SAAS,CAACgB,WAAW,CAAC,IAAI,CAACjB,EAAE,CAACQ,aAAa,EAAE,aAAa,CAAC;EAClE;EAKAH,mBAAmBA,CAAA;IACjB,IAAI,CAACJ,SAAS,CAACiB,WAAW,CAAC,IAAI,CAAClB,EAAE,CAACQ,aAAa,EAAE,IAAI,CAACP,SAAS,CAACkB,UAAU,CAAC,IAAI,CAACL,cAAc,CAAC,CAAC;IACjG,IAAI,CAACb,SAAS,CAACmB,MAAM,CAAC,IAAI,CAACpB,EAAE,CAACQ,aAAa,EAAE,UAAU,EAAE,MAAK;MAC5D,IAAI,CAACP,SAAS,CAACe,YAAY,CAAC,IAAI,CAAChB,EAAE,CAACQ,aAAa,EAAE,iBAAiB,EAAE,MAAM,CAAC;MAC7E,IAAI,CAACP,SAAS,CAACoB,QAAQ,CAAC,IAAI,CAACrB,EAAE,CAACQ,aAAa,EAAE,aAAa,CAAC;MAC7D,IAAI,CAACR,EAAE,CAACQ,aAAa,CAACc,KAAK,EAAE;IAC/B,CAAC,CAAC;EAEJ;;AA5DWxB,oBAAoB;mBAApBA,oBAAoB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,SAAA;AAAA;AAApB5B,oBAAoB;QAApBA,oBAAoB;EAAA6B,SAAA;EAAAC,YAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;eAApBC,GAAA,CAAAzB,mBAAA,EAAqB;MAAA,8BAAA0B,uDAAA;QAAA,OAArBD,GAAA,CAAArB,iCAAA,EAAmC;MAAA,oBAAAuB,6CAAA;QAAA,OAAnCF,GAAA,CAAApB,eAAA,EAAiB;MAAA","names":["EventEmitter","ContentEditDirective","constructor","el","renderer2","appContentEditChange","ignoreChange","ngOnInit","makeContentEditable","exitContentEditable","$event","nativeElement","blur","exitContentEditableWithoutChanges","propagateChange","emit","innerText","appContentEdit","exitChange","setAttribute","removeClass","appendChild","createText","listen","addClass","focus","i0","ɵɵdirectiveInject","ElementRef","Renderer2","selectors","hostBindings","ContentEditDirective_HostBindings","rf","ctx","ContentEditDirective_keydown_escape_HostBindingHandler","ContentEditDirective_blur_HostBindingHandler"],"sourceRoot":"","sources":["/Users/mac/Desktop/kanban-angular/src/app/directives/common/content-edit.directive.ts"],"sourcesContent":["import { Directive, HostListener, ElementRef, Input, EventEmitter, Output, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appContentEdit]'\n})\nexport class ContentEditDirective implements OnInit {\n\n\n\n  @Input() appContentEdit: string;\n  @Output() appContentEditChange: EventEmitter<string> = new EventEmitter<string>();\n\n  private ignoreChange = false;\n\n  constructor(private el: ElementRef, private renderer2: Renderer2) {\n  }\n\n\n  ngOnInit(): void {\n    this.makeContentEditable();\n  }\n\n  // if you press enter then move out of editable mode\n\n  @HostListener('keydown.enter', [])\n  exitContentEditable($event) {\n    this.el.nativeElement.blur();\n    return false;\n  }\n\n  @HostListener('keydown.escape', [])\n  exitContentEditableWithoutChanges($event) {\n    this.ignoreChange = true;\n    this.el.nativeElement.blur();\n    return false;\n  }\n\n\n  @HostListener('blur', [])\n  propagateChange() {\n    if (!this.ignoreChange) {\n      this.appContentEditChange.emit(this.el.nativeElement.innerText);\n    } else {\n      this.el.nativeElement.innerText = this.appContentEdit;\n    }\n    this.ignoreChange = false;\n    this.exitChange();\n  }\n\n  exitChange() {\n    this.renderer2.setAttribute(this.el.nativeElement, 'contenteditable', 'false');\n    this.renderer2.removeClass(this.el.nativeElement, 'inline-edit');\n  }\n\n\n\n\n  makeContentEditable() {\n    this.renderer2.appendChild(this.el.nativeElement, this.renderer2.createText(this.appContentEdit));\n    this.renderer2.listen(this.el.nativeElement, 'dblclick', () => {\n      this.renderer2.setAttribute(this.el.nativeElement, 'contenteditable', 'true');\n      this.renderer2.addClass(this.el.nativeElement, 'inline-edit');\n      this.el.nativeElement.focus();\n    });\n\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}